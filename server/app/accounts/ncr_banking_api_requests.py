import requests
import json
import time

#########################################################################################################################
# user_id:  written as HACKATHONUSER*** from 100 to 299 (101 doesn't seem to work for some reason?)


def get_user_accounts(user_id):
    url = "http://ncrdev-dev.apigee.net/digitalbanking/db-accounts/v1/accounts?hostUserId=" + \
        str(user_id)

    payload = {}
    # need to remember to consistently update this
    headers = {
        'Authorization': 'Bearer 18MjUvvObCANTdpwsKIwVGY63UVA',
        'transactionId': 'dcb9f3bb-f8a1-4002-a1a2-acf049c8bac0',
        'Accept': 'application/json'
    }
    response = requests.request("GET", url, headers=headers, data=payload)
    return response.json()
#########################################################################################################################

#########################################################################################################################

def get_account_id_from_accounts(response):
    return response['accounts'][0]['id']

#########################################################################################################################
def get_user_account(account_id, user_id):
    url = "http://ncrdev-dev.apigee.net/digitalbanking/db-accounts/v1/accounts/" + \
        str(account_id) + "?hostUserId=" + str(user_id)
    payload = {}
    headers = {
        'Authorization': 'Bearer 18MjUvvObCANTdpwsKIwVGY63UVA',
        'transactionId': 'dcb9f3bb-f8a1-4002-a1a2-acf049c8bac0',
        'Accept': 'application/json'
    }

    response = requests.request("GET", url, headers=headers, data=payload)
    return response.json()
#########################################################################################################################

#########################################################################################################################
# account_id is the first value in each entry in the list of accounts generated by get_user_accounts


def get_transactions_from_account(account_id, user_id):
    url = "http://ncrdev-dev.apigee.net/digitalbanking/db-transactions/v1/transactions?accountId=" + \
        str(account_id) + "&hostUserId=" + str(user_id)
    payload = {}
    headers = {
        'Authorization': 'Bearer 18MjUvvObCANTdpwsKIwVGY63UVA',
        'transactionId': 'dcb9f3bb-f8a1-4002-a1a2-acf049c8bac0',
        'Accept': 'application/json'
    }

    response = requests.request("GET", url, headers=headers, data=payload)
    return response.json()

#########################################################################################################################

#########################################################################################################################

def get_all_transactions_for_a_user(user_id):
    all_transacs = dict()
    all_transacs[user_id] = []
    accts = get_user_accounts(user_id)
    if 'accounts' in accts:
        for user_account in accts['accounts']:
            account_id = str(user_account['id'])
            transactions_for_acct = get_transactions_from_account(account_id, user_id)
            all_transacs[user_id] += [transactions_for_acct]
    
    return all_transacs

#########################################################################################################################

#########################################################################################################################

def get_all_transactions_for_all_users():
    all_user_transactions = dict()
    all_user_transactions["transactions"] = []
    for i in range(1, 300):
        user_id = "HACKATHONUSER" + str(i).zfill(3)
        user_transactions = dict()
        user_transactions[user_id] = get_all_transactions_for_a_user(user_id)
        all_user_transactions["transactions"] += [user_transactions[user_id]]
        
    with open('all_users_all_transactions.json', 'w') as outfile:
        json.dump(all_user_transactions, outfile)



## Checking account is "CHECKING"
## Savings account is "TCL_MASTER"
def get_specific_account_for_user(user_id, acct_type):
    accts = get_user_accounts(user_id)
    if 'accounts' in accts:
        for user_account in accts['accounts']:
            if user_account['type']['value'] == acct_type:
                return user_account
    else:
        return None


def get_transactions_for_specific_user_account_type(user_id, acct_type):
    accts = get_user_accounts(user_id)
    if 'accounts' in accts:
        account_id = None
        for user_account in accts['accounts']:
            if user_account['type']['value'] == acct_type:
                account_id = user_account['id']
                break
        return get_transactions_from_account(account_id, user_id)
    else:
        return None